{"ast":null,"code":"var _jsxFileName = \"/Users/anubhavkhanna/Desktop/Code Repos/minemaster/src/Components/MineGrid.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport calculateMatrix from '../utils/gridGenerator';\nimport './MineGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MineGrid() {\n  _s();\n  const mineSize = 9,\n    dificulty = 'EASY';\n  const [isBombClicked, setIsBombClicked] = useState(false);\n  const [generatedGrid, updateGeneratedGrid] = useState(new Array(mineSize * mineSize));\n  useEffect(() => {\n    updateGeneratedGrid(calculateMatrix());\n  }, []);\n  const openedCellsList = new Array(mineSize * mineSize).fill(0);\n  const onClickCell = index => {};\n  const returnMineRows = () => {\n    return generatedGrid.map((gridValue, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mine\",\n      onClick: () => onClickCell(index),\n      children: gridValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: returnMineRows()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(MineGrid, \"S09lQtKYlMkxyu3fNLlY6ESW7Co=\");\n_c = MineGrid;\nexport default MineGrid;\nvar _c;\n$RefreshReg$(_c, \"MineGrid\");","map":{"version":3,"names":["useEffect","useState","calculateMatrix","jsxDEV","_jsxDEV","MineGrid","_s","mineSize","dificulty","isBombClicked","setIsBombClicked","generatedGrid","updateGeneratedGrid","Array","openedCellsList","fill","onClickCell","index","returnMineRows","map","gridValue","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anubhavkhanna/Desktop/Code Repos/minemaster/src/Components/MineGrid.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport calculateMatrix from '../utils/gridGenerator';\nimport './MineGrid.css'\n\nfunction MineGrid() {\n  const mineSize = 9, dificulty = 'EASY';\n  const [isBombClicked, setIsBombClicked] = useState(false);\n  const [generatedGrid, updateGeneratedGrid] = useState(new Array(mineSize*mineSize));\n  useEffect(() => {\n    updateGeneratedGrid(calculateMatrix());\n  }, []);\n\n  const openedCellsList = new Array(mineSize*mineSize).fill(0)\n\n  const onClickCell = (index) => {\n\n  }\n\n  const returnMineRows = () => {\n    return generatedGrid.map((gridValue: number, index: number) => (\n      <div className='mine' onClick={() => onClickCell(index)}>{gridValue}</div>\n    ))\n  }\n\n\n  return (\n    <div className='container'>\n      {returnMineRows()}\n    </div>\n  );\n}\n\nexport default MineGrid;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAG,CAAC;IAAEC,SAAS,GAAG,MAAM;EACtC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACU,aAAa,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,IAAIY,KAAK,CAACN,QAAQ,GAACA,QAAQ,CAAC,CAAC;EACnFP,SAAS,CAAC,MAAM;IACdY,mBAAmB,CAACV,eAAe,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,eAAe,GAAG,IAAID,KAAK,CAACN,QAAQ,GAACA,QAAQ,CAAC,CAACQ,IAAI,CAAC,CAAC,CAAC;EAE5D,MAAMC,WAAW,GAAIC,KAAK,IAAK,CAE/B,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAOP,aAAa,CAACQ,GAAG,CAAC,CAACC,SAAiB,EAAEH,KAAa,kBACxDb,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAACC,OAAO,EAAEA,CAAA,KAAMN,WAAW,CAACC,KAAK,CAAE;MAAAM,QAAA,EAAEH;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAC1E,CAAC;EACJ,CAAC;EAGD,oBACEvB,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAE,QAAA,EACvBL,cAAc,CAAC;EAAC;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAACrB,EAAA,CA1BQD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA4BjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}