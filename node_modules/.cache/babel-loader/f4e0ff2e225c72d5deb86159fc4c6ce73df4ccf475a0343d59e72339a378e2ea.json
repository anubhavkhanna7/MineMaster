{"ast":null,"code":"var _jsxFileName = \"/Users/anubhavkhanna/Desktop/Code Repos/MineMaster/src/Components/MineGrid/Timer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport './MineGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer({\n  allMinesIsolated,\n  isBombClicked,\n  isDarkMode,\n  isPaused,\n  setPausedState,\n  onResetClick,\n  timer,\n  setTimer\n}) {\n  _s();\n  const checkTimer = () => {\n    let prevTimer = 0;\n    setTimer(prev => {\n      prevTimer = prev;\n      return prev;\n    });\n  };\n  useEffect(() => {\n    const id = setInterval(() => {\n      if (!allMinesIsolated && !isPaused && !isBombClicked) {\n        setTimer(prev => prev + 1);\n      }\n\n      // allMinesIsolated && updateFinalTime(convertToTime(timer));\n      isBombClicked && updateFinalTime(convertToTime(timer));\n    }, 1000);\n\n    // if (allMinesIsolated) {\n    //   updateGameStats(selectedDificulty, {gameTime: convertToTime(), gameWon: true});\n    // }\n    // if (isBombClicked) {\n    //   updateGameStats(selectedDificulty, {gameTime: convertToTime(), gameWon: false});\n    // }\n\n    return () => {\n      checkTimer();\n      clearInterval(id);\n    };\n  }, [allMinesIsolated, isBombClicked, isPaused]);\n  const convertToTime = timerCount => {\n    const seconds = Math.abs(timerCount % 60);\n    const minutes = Math.floor(timerCount / 60) % 60;\n    const hours = Math.floor(timerCount / 60) < 60 ? 0 : Math.floor(Math.floor(timerCount / 60) / 60);\n    return `${hours <= 9 ? `0${hours}` : hours} : ${minutes <= 9 ? `0${minutes}` : minutes} : ${seconds <= 9 ? `0${seconds}` : seconds}`;\n  };\n  const returnBtnClass = () => {\n    if (isPaused) {\n      return `play ${isDarkMode ? 'timer-play-dark' : 'timer-play-light'}`;\n    }\n    return `pause ${isDarkMode ? 'timer-pause-dark' : 'timer-pause-light'}`;\n  };\n  const onResetGame = () => {\n    onResetClick();\n    setTimer(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `timer ${isDarkMode ? 'timer-dark' : 'timer-light'}`,\n      children: [convertToTime(timer), !isBombClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: returnBtnClass(),\n        onClick: () => setPausedState(!isPaused)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `reset ${!isDarkMode && 'reset-light'}`,\n      onClick: onResetGame,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `reset-end ${!isDarkMode && 'reset-end-light'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","Timer","allMinesIsolated","isBombClicked","isDarkMode","isPaused","setPausedState","onResetClick","timer","setTimer","_s","checkTimer","prevTimer","prev","id","setInterval","updateFinalTime","convertToTime","clearInterval","timerCount","seconds","Math","abs","minutes","floor","hours","returnBtnClass","onResetGame","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anubhavkhanna/Desktop/Code Repos/MineMaster/src/Components/MineGrid/Timer.tsx"],"sourcesContent":["import { Dispatch, MutableRefObject, SetStateAction, useEffect, useState } from \"react\";\nimport './MineGrid.css'\nimport { updateGameStats } from \"../../utils/localStorage\";\n\nexport default function Timer(\n    {allMinesIsolated, isBombClicked, isDarkMode, isPaused, setPausedState, onResetClick, timer, setTimer}:\n    {\n      allMinesIsolated: boolean,\n      isBombClicked: boolean,\n      isDarkMode: boolean,\n      isPaused: boolean,\n      setPausedState: Dispatch<SetStateAction<boolean>>,\n      onResetClick: () => void,\n      timer: number,\n      setTimer: Dispatch<SetStateAction<number>>,\n    }\n  ) {\n\n  const checkTimer = () => {\n    let prevTimer = 0;\n    setTimer((prev) => {\n      prevTimer = prev;\n      return prev;\n    });\n  };\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      if (!allMinesIsolated && !isPaused && !isBombClicked) { \n        setTimer((prev) => prev + 1);\n      }\n\n      // allMinesIsolated && updateFinalTime(convertToTime(timer));\n      isBombClicked && updateFinalTime(convertToTime(timer));\n    }, 1000);\n\n    // if (allMinesIsolated) {\n    //   updateGameStats(selectedDificulty, {gameTime: convertToTime(), gameWon: true});\n    // }\n    // if (isBombClicked) {\n    //   updateGameStats(selectedDificulty, {gameTime: convertToTime(), gameWon: false});\n    // }\n\n    return () => {\n      checkTimer();\n      clearInterval(id);\n    };\n  }, [allMinesIsolated, isBombClicked, isPaused]);\n\n  const convertToTime = (timerCount: number) => {\n    const seconds = Math.abs(timerCount%60);\n    const minutes = (Math.floor(timerCount/60))%60;\n    const hours = Math.floor(timerCount/60) < 60 ? 0 : Math.floor(Math.floor(timerCount/60)/60);\n    return `${hours <= 9 ? `0${hours}` : hours} : ${minutes <= 9 ? `0${minutes}` : minutes} : ${seconds <= 9 ? `0${seconds}` : seconds}`;\n  }\n\n  const returnBtnClass = () => {\n    if(isPaused) {\n      return `play ${isDarkMode ? 'timer-play-dark' : 'timer-play-light'}`\n    }\n    return `pause ${isDarkMode ? 'timer-pause-dark' : 'timer-pause-light'}`\n  }\n\n  const onResetGame = () => {\n    onResetClick();\n    setTimer(0);\n  }\n\n  return (\n    <div className='timerContainer'>\n      <div className={`timer ${isDarkMode ? 'timer-dark' : 'timer-light'}`}>\n        {convertToTime(timer)}\n        {!isBombClicked && (\n          <div className={returnBtnClass()} onClick={() => setPausedState(!isPaused)} />\n        )}\n      </div>\n      <div className={`reset ${!isDarkMode && 'reset-light'}`} onClick={onResetGame}>\n        <div className={`reset-end ${!isDarkMode && 'reset-end-light'}`} />\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}