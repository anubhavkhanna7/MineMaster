{"ast":null,"code":"var _jsxFileName = \"/Users/anubhavkhanna/Desktop/Code Repos/minemaster/src/Components/MineGrid/Timer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer() {\n  _s();\n  const [timer, setTimer] = useState(0);\n  const [isPaused, setPausedState] = useState(false);\n  const checkTimer = () => {\n    let prevTimer = 0;\n    setTimer(prev => {\n      prevTimer = prev;\n      return prev;\n    });\n  };\n  useEffect(() => {\n    const id = setInterval(() => {\n      setTimer(prev => prev + 1);\n    }, 1000);\n    return () => {\n      checkTimer();\n      clearInterval(id);\n    };\n  }, []);\n  const convertToTime = () => {\n    const seconds = timer % 60;\n    const minutes = timer / 60;\n    const hours = timer / minutes;\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: timer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"gdwFG2/qVePADD/KQ7Q9IT2xov8=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Timer","_s","timer","setTimer","isPaused","setPausedState","checkTimer","prevTimer","prev","id","setInterval","clearInterval","convertToTime","seconds","minutes","hours","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anubhavkhanna/Desktop/Code Repos/minemaster/src/Components/MineGrid/Timer.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function Timer() {\n  const [timer, setTimer] = useState(0);\n  const [isPaused, setPausedState] = useState(false);\n\n  const checkTimer = () => {\n    let prevTimer = 0;\n    setTimer((prev) => {\n      prevTimer = prev;\n      return prev;\n    });\n  };\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      setTimer((prev) => prev + 1);\n    }, 1000);\n\n    return () => {\n      checkTimer();\n      clearInterval(id);\n    };\n  }, []);\n\n  const convertToTime = () => {\n    const seconds = timer%60;\n    const minutes = timer/60;\n    const hours = timer/minutes;\n    return \n  }\n\n\n  return (\n    <div>\n      {timer}\n    </div>\n  );\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACO,QAAQ,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAElD,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIC,SAAS,GAAG,CAAC;IACjBJ,QAAQ,CAAEK,IAAI,IAAK;MACjBD,SAAS,GAAGC,IAAI;MAChB,OAAOA,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,MAAMa,EAAE,GAAGC,WAAW,CAAC,MAAM;MAC3BP,QAAQ,CAAEK,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;IAC9B,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXF,UAAU,CAAC,CAAC;MACZK,aAAa,CAACF,EAAE,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,OAAO,GAAGX,KAAK,GAAC,EAAE;IACxB,MAAMY,OAAO,GAAGZ,KAAK,GAAC,EAAE;IACxB,MAAMa,KAAK,GAAGb,KAAK,GAACY,OAAO;IAC3B;EACF,CAAC;EAGD,oBACEf,OAAA;IAAAiB,QAAA,EACGd;EAAK;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CApCuBD,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}