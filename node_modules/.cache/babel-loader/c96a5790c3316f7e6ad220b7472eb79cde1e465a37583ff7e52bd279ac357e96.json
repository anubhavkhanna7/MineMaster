{"ast":null,"code":"var _jsxFileName = \"/Users/anubhavkhanna/Desktop/Code Repos/minemaster/src/Components/MineGrid/Timer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './MineGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer({\n  isDarkMode,\n  isPaused,\n  setPausedState\n}) {\n  _s();\n  const [timer, setTimer] = useState(0);\n  const checkTimer = () => {\n    let prevTimer = 0;\n    setTimer(prev => {\n      prevTimer = prev;\n      return prev;\n    });\n  };\n  useEffect(() => {\n    const id = setInterval(() => {\n      setTimer(prev => prev + 1);\n    }, 1000);\n    return () => {\n      checkTimer();\n      clearInterval(id);\n    };\n  }, []);\n  const convertToTime = () => {\n    const seconds = Math.abs(timer % 60);\n    const minutes = Math.floor(timer / 60);\n    const hours = minutes < 60 ? 0 : Math.floor(minutes / 60);\n    return `${hours <= 9 ? `0${hours}` : hours} : ${minutes <= 9 ? `0${minutes}` : minutes} : ${seconds <= 9 ? `0${seconds}` : seconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `timer ${isDarkMode ? 'timer-dark' : 'timer-light'}`,\n    children: [convertToTime(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${isDarkMode} ${!isPaused ? 'play' : 'pause'}`,\n      onClick: () => setPausedState(!isPaused)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"ebJi34r7i5iV6ijtknLV7I/4wK8=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Timer","isDarkMode","isPaused","setPausedState","_s","timer","setTimer","checkTimer","prevTimer","prev","id","setInterval","clearInterval","convertToTime","seconds","Math","abs","minutes","floor","hours","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anubhavkhanna/Desktop/Code Repos/minemaster/src/Components/MineGrid/Timer.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport './MineGrid.css'\n\nexport default function Timer({isDarkMode, isPaused, setPausedState}: {isDarkMode: boolean, isPaused: boolean, setPausedState: Dispatch<SetStateAction<boolean>>}) {\n  const [timer, setTimer] = useState(0);\n\n  const checkTimer = () => {\n    let prevTimer = 0;\n    setTimer((prev) => {\n      prevTimer = prev;\n      return prev;\n    });\n  };\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      setTimer((prev) => prev + 1);\n    }, 1000);\n\n    return () => {\n      checkTimer();\n      clearInterval(id);\n    };\n  }, []);\n\n  const convertToTime = () => {\n    const seconds = Math.abs(timer%60);\n    const minutes = Math.floor(timer/60);\n    const hours = minutes < 60 ? 0 : Math.floor(minutes/60);\n    return `${hours <= 9 ? `0${hours}` : hours} : ${minutes <= 9 ? `0${minutes}` : minutes} : ${seconds <= 9 ? `0${seconds}` : seconds}`;\n  }\n\n\n  return (\n    <div className={`timer ${isDarkMode ? 'timer-dark' : 'timer-light'}`}>\n      {convertToTime()}\n      <div className={`${isDarkMode } ${!isPaused ? 'play' : 'pause'}`} onClick={() => setPausedState(!isPaused)} />\n    </div>\n  );\n}"],"mappings":";;AAAA,SAAmCA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACrE,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,eAAe,SAASC,KAAKA,CAAC;EAACC,UAAU;EAAEC,QAAQ;EAAEC;AAA2G,CAAC,EAAE;EAAAC,EAAA;EACjK,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIC,SAAS,GAAG,CAAC;IACjBF,QAAQ,CAAEG,IAAI,IAAK;MACjBD,SAAS,GAAGC,IAAI;MAChB,OAAOA,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd,MAAMc,EAAE,GAAGC,WAAW,CAAC,MAAM;MAC3BL,QAAQ,CAAEG,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;IAC9B,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXF,UAAU,CAAC,CAAC;MACZK,aAAa,CAACF,EAAE,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,OAAO,GAAGC,IAAI,CAACC,GAAG,CAACX,KAAK,GAAC,EAAE,CAAC;IAClC,MAAMY,OAAO,GAAGF,IAAI,CAACG,KAAK,CAACb,KAAK,GAAC,EAAE,CAAC;IACpC,MAAMc,KAAK,GAAGF,OAAO,GAAG,EAAE,GAAG,CAAC,GAAGF,IAAI,CAACG,KAAK,CAACD,OAAO,GAAC,EAAE,CAAC;IACvD,OAAQ,GAAEE,KAAK,IAAI,CAAC,GAAI,IAAGA,KAAM,EAAC,GAAGA,KAAM,MAAKF,OAAO,IAAI,CAAC,GAAI,IAAGA,OAAQ,EAAC,GAAGA,OAAQ,MAAKH,OAAO,IAAI,CAAC,GAAI,IAAGA,OAAQ,EAAC,GAAGA,OAAQ,EAAC;EACtI,CAAC;EAGD,oBACEf,OAAA;IAAKqB,SAAS,EAAG,SAAQnB,UAAU,GAAG,YAAY,GAAG,aAAc,EAAE;IAAAoB,QAAA,GAClER,aAAa,CAAC,CAAC,eAChBd,OAAA;MAAKqB,SAAS,EAAG,GAAEnB,UAAY,IAAG,CAACC,QAAQ,GAAG,MAAM,GAAG,OAAQ,EAAE;MAACoB,OAAO,EAAEA,CAAA,KAAMnB,cAAc,CAAC,CAACD,QAAQ;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3G,CAAC;AAEV;AAACtB,EAAA,CApCuBJ,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}